-- MySQL Script generated by MySQL Workbench
-- Mon Feb 11 11:23:26 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema skeduleApp
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema skeduleApp
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `skeduleApp` DEFAULT CHARACTER SET utf8 ;
USE `skeduleApp` ;

-- -----------------------------------------------------
-- Table `skeduleApp`.`language`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `skeduleApp`.`language` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `shortname` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `skeduleApp`.`currency`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `skeduleApp`.`currency` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `shortname` VARCHAR(255) NOT NULL,
  `symbol` VARCHAR(12) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `idcurrency_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `skeduleApp`.`mongo_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `skeduleApp`.`mongo_user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `mongo_id` VARCHAR(255) NOT NULL,
  `language_id` INT NOT NULL,
  `currency_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_mongo_user_language1_idx` (`language_id` ASC),
  INDEX `fk_mongo_user_currency1_idx` (`currency_id` ASC),
  CONSTRAINT `fk_mongo_user_language1`
    FOREIGN KEY (`language_id`)
    REFERENCES `skeduleApp`.`language` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_mongo_user_currency1`
    FOREIGN KEY (`currency_id`)
    REFERENCES `skeduleApp`.`currency` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `skeduleApp`.`self_task`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `skeduleApp`.`self_task` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(255) NOT NULL,
  `description` LONGTEXT NULL,
  `createdTime` DATETIME NOT NULL,
  `endTime` DATETIME NULL,
  `mongo_user_id` INT NOT NULL,
  `isCompleted` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_self_task_mongo_user1_idx` (`mongo_user_id` ASC),
  CONSTRAINT `fk_self_task_mongo_user1`
    FOREIGN KEY (`mongo_user_id`)
    REFERENCES `skeduleApp`.`mongo_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `skeduleApp`.`repeatable_task`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `skeduleApp`.`repeatable_task` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(255) NOT NULL,
  `description` LONGTEXT NULL,
  `createdTime` DATETIME NOT NULL,
  `endTime` DATETIME NULL,
  `mongo_user_id` INT NOT NULL,
  `cron` VARCHAR(255) NOT NULL,
  `isCompleted` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_repeatable_task_mongo_user1_idx` (`mongo_user_id` ASC),
  CONSTRAINT `fk_repeatable_task_mongo_user1`
    FOREIGN KEY (`mongo_user_id`)
    REFERENCES `skeduleApp`.`mongo_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `skeduleApp`.`reminder`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `skeduleApp`.`reminder` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(255) NOT NULL,
  `description` LONGTEXT NULL,
  `createdTime` DATETIME NOT NULL,
  `remindTime` DATETIME NOT NULL,
  `mongo_user_id` INT NOT NULL,
  `type` SET("medicine", "common") NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_reminder_mongo_user1_idx` (`mongo_user_id` ASC),
  CONSTRAINT `fk_reminder_mongo_user1`
    FOREIGN KEY (`mongo_user_id`)
    REFERENCES `skeduleApp`.`mongo_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `skeduleApp`.`country`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `skeduleApp`.`country` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `shortname` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `skeduleApp`.`company`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `skeduleApp`.`company` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(255) NOT NULL,
  `address` VARCHAR(255) NULL,
  `country_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_company_country1_idx` (`country_id` ASC),
  CONSTRAINT `fk_company_country1`
    FOREIGN KEY (`country_id`)
    REFERENCES `skeduleApp`.`country` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `skeduleApp`.`company_users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `skeduleApp`.`company_users` (
  `mongo_user_id` INT NOT NULL,
  `company_id` INT NOT NULL,
  PRIMARY KEY (`mongo_user_id`, `company_id`),
  INDEX `fk_mongo_user_has_company_company1_idx` (`company_id` ASC),
  INDEX `fk_mongo_user_has_company_mongo_user1_idx` (`mongo_user_id` ASC),
  CONSTRAINT `fk_mongo_user_has_company_mongo_user1`
    FOREIGN KEY (`mongo_user_id`)
    REFERENCES `skeduleApp`.`mongo_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_mongo_user_has_company_company1`
    FOREIGN KEY (`company_id`)
    REFERENCES `skeduleApp`.`company` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `skeduleApp`.`company_task`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `skeduleApp`.`company_task` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(255) NOT NULL,
  `description` LONGTEXT NULL,
  `company_id` INT NOT NULL,
  `isCompleted` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_company_task_company1_idx` (`company_id` ASC),
  CONSTRAINT `fk_company_task_company1`
    FOREIGN KEY (`company_id`)
    REFERENCES `skeduleApp`.`company` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `skeduleApp`.`assigned_task`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `skeduleApp`.`assigned_task` (
  `mongo_user_id` INT NOT NULL,
  `company_task_id` INT NOT NULL,
  `assignedTime` VARCHAR(255) NULL,
  PRIMARY KEY (`mongo_user_id`, `company_task_id`),
  INDEX `fk_mongo_user_has_company_task_company_task1_idx` (`company_task_id` ASC),
  INDEX `fk_mongo_user_has_company_task_mongo_user1_idx` (`mongo_user_id` ASC),
  CONSTRAINT `fk_mongo_user_has_company_task_mongo_user1`
    FOREIGN KEY (`mongo_user_id`)
    REFERENCES `skeduleApp`.`mongo_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_mongo_user_has_company_task_company_task1`
    FOREIGN KEY (`company_task_id`)
    REFERENCES `skeduleApp`.`company_task` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `skeduleApp`.`movie_watch_task`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `skeduleApp`.`movie_watch_task` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `kinopoisk_movie_id` INT NULL,
  `imdb_movie_id` INT NULL,
  `mongo_user_id` INT NOT NULL,
  `title` VARCHAR(45) NOT NULL,
  `isCompleted` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_movie_watch_task_mongo_user1_idx` (`mongo_user_id` ASC),
  CONSTRAINT `fk_movie_watch_task_mongo_user1`
    FOREIGN KEY (`mongo_user_id`)
    REFERENCES `skeduleApp`.`mongo_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `skeduleApp`.`task_message`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `skeduleApp`.`task_message` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `message` VARCHAR(255) NOT NULL,
  `company_task_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_task_message_company_task1_idx` (`company_task_id` ASC),
  CONSTRAINT `fk_task_message_company_task1`
    FOREIGN KEY (`company_task_id`)
    REFERENCES `skeduleApp`.`company_task` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `skeduleApp`.`book_read_task`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `skeduleApp`.`book_read_task` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `isbn` VARCHAR(255) NULL,
  `title` VARCHAR(45) NOT NULL,
  `mongo_user_id` INT NOT NULL,
  `isCompleted` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_book_read_task_mongo_user1_idx` (`mongo_user_id` ASC),
  CONSTRAINT `fk_book_read_task_mongo_user1`
    FOREIGN KEY (`mongo_user_id`)
    REFERENCES `skeduleApp`.`mongo_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `skeduleApp`.`company_invite`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `skeduleApp`.`company_invite` (
  `mongo_user_id` INT NOT NULL,
  `company_id` INT NOT NULL,
  `isReaded` TINYINT(1) NOT NULL DEFAULT 0,
  `message` LONGTEXT NULL,
  PRIMARY KEY (`mongo_user_id`, `company_id`),
  INDEX `fk_mongo_user_has_company_company2_idx` (`company_id` ASC),
  INDEX `fk_mongo_user_has_company_mongo_user2_idx` (`mongo_user_id` ASC),
  CONSTRAINT `fk_mongo_user_has_company_mongo_user2`
    FOREIGN KEY (`mongo_user_id`)
    REFERENCES `skeduleApp`.`mongo_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_mongo_user_has_company_company2`
    FOREIGN KEY (`company_id`)
    REFERENCES `skeduleApp`.`company` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `skeduleApp`.`multistep_task`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `skeduleApp`.`multistep_task` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(255) NOT NULL,
  `description` LONGTEXT NULL,
  `isCompleted` TINYINT(1) NOT NULL DEFAULT 0,
  `mongo_user_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_multistep_task_mongo_user1_idx` (`mongo_user_id` ASC),
  CONSTRAINT `fk_multistep_task_mongo_user1`
    FOREIGN KEY (`mongo_user_id`)
    REFERENCES `skeduleApp`.`mongo_user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `skeduleApp`.`task_step`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `skeduleApp`.`task_step` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `description` LONGTEXT NULL,
  `endTime` DATETIME NULL,
  `multistep_task_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `id_UNIQUE` (`id` ASC),
  INDEX `fk_task_step_multistep_task1_idx` (`multistep_task_id` ASC),
  CONSTRAINT `fk_task_step_multistep_task1`
    FOREIGN KEY (`multistep_task_id`)
    REFERENCES `skeduleApp`.`multistep_task` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
