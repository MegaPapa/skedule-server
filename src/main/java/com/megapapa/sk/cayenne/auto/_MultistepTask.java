package com.megapapa.sk.cayenne.auto;

import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.megapapa.sk.cayenne.MongoUser;
import com.megapapa.sk.cayenne.TaskStep;

/**
 * Class _MultistepTask was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _MultistepTask extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "id";

    public static final Property<String> DESCRIPTION = Property.create("description", String.class);
    public static final Property<Boolean> IS_COMPLETED = Property.create("isCompleted", Boolean.class);
    public static final Property<String> TITLE = Property.create("title", String.class);
    public static final Property<MongoUser> MONGO_USER = Property.create("mongoUser", MongoUser.class);
    public static final Property<List<TaskStep>> TASK_STEPS = Property.create("taskSteps", List.class);

    public void setDescription(String description) {
        writeProperty("description", description);
    }
    public String getDescription() {
        return (String)readProperty("description");
    }

    public void setIsCompleted(boolean isCompleted) {
        writeProperty("isCompleted", isCompleted);
    }
	public boolean isIsCompleted() {
        Boolean value = (Boolean)readProperty("isCompleted");
        return (value != null) ? value.booleanValue() : false;
    }

    public void setTitle(String title) {
        writeProperty("title", title);
    }
    public String getTitle() {
        return (String)readProperty("title");
    }

    public void setMongoUser(MongoUser mongoUser) {
        setToOneTarget("mongoUser", mongoUser, true);
    }

    public MongoUser getMongoUser() {
        return (MongoUser)readProperty("mongoUser");
    }


    public void addToTaskSteps(TaskStep obj) {
        addToManyTarget("taskSteps", obj, true);
    }
    public void removeFromTaskSteps(TaskStep obj) {
        removeToManyTarget("taskSteps", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<TaskStep> getTaskSteps() {
        return (List<TaskStep>)readProperty("taskSteps");
    }


}
